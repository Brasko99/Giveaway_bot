from enum import member
import telebot
from random import choice
from telebot import types
import os
import datetime
import urllib.request

os.environ['CHANNEL_USERNAME'] = '@cska_mo_rf'
os.environ['FILE_EXTENSION'] = 'jpg'
os.environ['CURRENT_FOLDER_NAME'] = 'MyLot1'
###–ü–æ–¥–∫–ª—é—á–∞–µ–º –±–æ—Ç–∞
TOKEN = '7100567356:AAE3k61dzZEi99QHSMStfxC0SU3HRPyPa_k'
bot = telebot.TeleBot(TOKEN)
###–°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –ø–æ–¥ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
markup = types.ReplyKeyboardMarkup()
btn1 = types.KeyboardButton("–°–æ–∑–¥–∞—Ç—å —Ä–æ–∑—ã–≥—Ä—ã—à")
btn2 = types.KeyboardButton("–ú–æ–∏ —Ä–æ–∑—ã–≥—Ä—ã—à–∏")
markup.row(btn1, btn2)
btn3 = types.KeyboardButton("–ú–æ–π –∫–∞–Ω–∞–ª")
btn4 = types.KeyboardButton("–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞")
markup.row(btn3, btn4)
###–ü–æ–ª—É—á–∞–µ–º –ø—É—Ç—å –∫ –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
current_directory = os.path.dirname(os.path.realpath(__file__))

###–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã "–°—Ç–∞—Ä—Ç" 
@bot.message_handler(commands=['start'])
def start(message): 
    bot.send_message(message.chat.id, f"üëã –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!\n–î–∞–Ω–Ω—ã–π –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –í–∞–º –ø—Ä–æ–≤–µ—Å—Ç–∏ —Ä–æ–∑—ã–≥—Ä—ã—à –Ω–∞ –∫–∞–Ω–∞–ª–µ, –≤ —á–∞—Ç–µ –∏–ª–∏ –≥—Ä—É–ø–ø–µ.\n–ì–æ—Ç–æ–≤—ã —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —Ä–æ–∑—ã–≥—Ä—ã—à?", reply_markup=markup)


###–°–º–µ–Ω–∞ –∫–∞–Ω–∞–ª–∞ –¥–ª—è —Ä–æ–∑—ã–≥—Ä—ã—à–∞
@bot.message_handler(commands=['change_channel'])
def edit_channel(message):
    My_channel = os.environ.get('CHANNEL_USERNAME')
    keyboard = types.InlineKeyboardMarkup()
    btn1 = types.InlineKeyboardButton(text="–°–º–µ–Ω–∏—Ç—å –∫–∞–Ω–∞–ª –Ω–∞ –¥—Ä—É–≥–æ–π", callback_data='Change_channel')
    keyboard.add(btn1)
    bot.send_message(message.chat.id, f'–ö–∞–Ω–∞–ª –¥–ª—è —Ä–æ–∑—ã–≥—Ä—ã—à–∞: {My_channel}', reply_markup=keyboard)
def process_new_channel(message):
    chat_id = message.text
    bot_info = bot.get_me()
    bot_user_id = bot_info.id
    if '@' in chat_id:
        try: 
            chat_member = bot.get_chat_member(chat_id, bot_user_id)
            if chat_member.status == 'administrator':
                os.environ['CHANNEL_USERNAME'] = message.text 
                bot.send_message(message.chat.id, f"–ö–∞–Ω–∞–ª —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞: {os.environ.get('CHANNEL_USERNAME')}.\n–ü–æ—Ä–∞ —É—Å—Ç—Ä–∞–∏–≤–∞—Ç—å —Ä–æ–∑—ã–≥—Ä—ã—à!", reply_markup=markup)
            else:
                bot.reply_to(message, '–ë–æ—Ç –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –∫–∞–Ω–∞–ª–∞.\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–∑–Ω–∞—á—å—Ç–µ –µ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ–≥–æ –∏–º—è –µ—â—ë —Ä–∞–∑.')
                bot.register_next_step_handler(message, process_new_channel)
        except Exception:
            bot.reply_to(message, '–ë–æ—Ç –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –∫–∞–Ω–∞–ª–∞.\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–∑–Ω–∞—á—å—Ç–µ –µ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ–≥–æ –∏–º—è –µ—â—ë —Ä–∞–∑.')
            bot.register_next_step_handler(message, process_new_channel)
    else:
        bot.send_message(message.chat.id, '–ù–µ–ø—Ä–∞–≤–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç!\n–ù—É–∂–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç: @channelname\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ –≤ –Ω—É–∂–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ:')               
        bot.register_next_step_handler(message, process_new_channel)


###–ü—Ä–∏–µ–º —Ñ–∞–π–ª–æ–≤ –¥–ª—è —Ä–æ–∑—ã–≥—Ä—ã—à–∞ –∏ –≤—ã–±–æ—Ä –∫–Ω–æ–ø–∫–∏ –¥–ª—è —Ä–æ–∑—ã–≥—Ä—ã—à–∞
def files_for_lot(message):
    try:
        folder_name = os.environ.get('CURRENT_FOLDER_NAME')
        file_id = message.photo[-1].file_id if message.photo else message.video.file_id if message.video else message.document.file_id
        file_info = bot.get_file(file_id)        
        file_path = file_info.file_path
        url = f'https://api.telegram.org/file/bot{TOKEN}/{file_path}'
        file_extension = file_info.file_path.split('.')[-1]
        os.environ['FILE_EXTENSION'] = file_extension
        urllib.request.urlretrieve(url, f'./{folder_name}/file.{file_extension}')    
        description = str(message.caption) if message.caption else 'No_Caption'
        with open(f'./{folder_name}/description.txt', 'w') as description_file:
            description_file.write(description + '   ,')
        bot.send_message(message.chat.id, "‚úÖ –ú–µ–¥–∏–∞—Ñ–∞–π–ª –∏ –æ–ø–∏—Å–∞–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!")
    except Exception:
        description = str(message.text)
        with open(f'./{folder_name}/description.txt', 'w') as description_file:
            description_file.write(description + '   ,')
        # –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        bot.send_message(message.chat.id, "‚úÖ –¢–µ–∫—Å—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω!")
    keyboard = types.InlineKeyboardMarkup()
    btn1 = types.InlineKeyboardButton(text="–£—á–∞—Å—Ç–≤—É—é!", callback_data='btn_ver1')
    btn2 = types.InlineKeyboardButton(text="–£—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å", callback_data='btn_ver2')
    btn3 = types.InlineKeyboardButton(text="–ü—Ä–∏–Ω—è—Ç—å —É—á–∞—Å—Ç–∏–µ", callback_data='btn_ver3')
    btn4 = types.InlineKeyboardButton(text="–ù–∞–ø–∏—Å–∞—Ç—å —Å–≤–æ–π –≤–∞—Ä–∏–∞–Ω—Ç", callback_data='btn_ver4')
    keyboard.add(btn1)
    keyboard.add(btn2)
    keyboard.add(btn3)
    keyboard.add(btn4)    
    bot.send_message(message.chat.id, 'üì∞ –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –∫–Ω–æ–ø–∫–∏ –¥–ª—è —É—á–∞—Å—Ç–∏—è –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ:', reply_markup=keyboard)


###–î–æ–±–∞–≤–ª–µ–º –∫–Ω–æ–ø–∫—É —Å —Ç–µ–∫—Å—Ç–æ–º –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
def add_button_text(message):
    folder_name = os.environ.get('CURRENT_FOLDER_NAME')
    with open(f'./{folder_name}/description.txt', 'a') as description_file:
        description_file.write(f'{message.text}   ,')
    bot.send_message(message.chat.id, '‚úÖ –¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω')
    chose_channels_subscribe(message)


###–û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–∞–Ω–∞–ª—ã, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –¥–ª—è —É—á–∞—Å—Ç–∏—è –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ
def chose_channels_subscribe(message):
    keyboard2 = types.InlineKeyboardMarkup()
    knopka = types.InlineKeyboardButton(text="–û—Å—Ç–∞–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ –º–æ–π –∫–∞–Ω–∞–ª", callback_data='Only_My_Channel')
    knopka2 = types.InlineKeyboardButton(text="–ö–æ–Ω–∫—É—Ä—Å –±–µ–∑ –ø–æ–¥–ø–∏—Å–æ–∫", callback_data='Without_Subscribe')
    knopka3 = types.InlineKeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å –∫–∞–Ω–∞–ª—ã", callback_data='Add_channels')
    keyboard2.add(knopka3)
    keyboard2.add(knopka)
    keyboard2.add(knopka2)
    bot.send_message(message.chat.id, f'üìä –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞–Ω–∞–ª—ã, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –¥–ª—è —É—á–∞—Å—Ç–∏—è –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ:\n\n‚ö†Ô∏è –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ —á—Ç–æ–±—ã —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ –º–æ–∂–Ω–æ –±—ã–ª–æ —Å –ø–æ–¥–ø–∏—Å–∫–æ–π –Ω–∞ –í–∞—à –∫–∞–Ω–∞–ª ({os.environ["CHANNEL_USERNAME"]}) –∏–ª–∏ –±–µ–∑ –ø–æ–¥–ø–∏—Å–æ–∫ –Ω–∞ –∫–∞–Ω–∞–ª, –Ω–∞–∂–º–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫ –Ω–∏–∂–µ:', reply_markup=keyboard2)


###–î–æ–±–∞–≤–ª—è–µ–µ–º –µ—â—ë –∫–∞–Ω–∞–ª–æ–≤ –¥–ª—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏
def add_more_subscribe_channels(message):
    folder_name = os.environ.get('CURRENT_FOLDER_NAME')
    chat_id = message.text
    bot_info = bot.get_me()
    bot_user_id = bot_info.id
    keyboard3 = types.InlineKeyboardMarkup()
    knopka3 = types.InlineKeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å –µ—â—ë –æ–¥–∏–Ω –∫–∞–Ω–∞–ª", callback_data='Add_more_subscribe_channels')
    knopka4 = types.InlineKeyboardButton(text="–î–≤–∏–≥–∞–µ–º—Å—è –¥–∞–ª—å—à–µ!", callback_data='Next_step')
    keyboard3.add(knopka3)
    keyboard3.add(knopka4)
    if '@' in chat_id:
        try: 
            chat_member = bot.get_chat_member(chat_id, bot_user_id)
            if chat_member.status == 'administrator': 
                with open(f'./{folder_name}/channels.txt', 'a') as channels_file:
                    channels_file.write(chat_id+",")
                bot.send_message(message.chat.id, f"‚úÖ –ö–∞–Ω–∞–ª —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–º –¥–ª—è —É—á–∞—Å—Ç–∏—è –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ!\n\n–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –µ—â—ë –æ–¥–∏–Ω –∫–∞–Ω–∞–ª –æ–ø—Ä–∞–≤—å—Ç–µ –µ–≥–æ –∏–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ @channel_name\n–ß—Ç–æ–±—ã –æ–∫–æ–Ω—á–∏—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–æ–≤ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:\n\n–ù–µ –∑–∞–±–∏—Ä–∞–π—Ç–µ —É –±–æ—Ç–∞ –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∫–∞–Ω–∞–ª–∞, –∏–Ω–∞—á–µ –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç—å –Ω–µ –±—É–¥–µ—Ç!", reply_markup=keyboard3)
            else:
                bot.reply_to(message, '–ë–æ—Ç –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –∫–∞–Ω–∞–ª–∞.\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–∑–Ω–∞—á—å—Ç–µ –µ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ–≥–æ –µ—â—ë —Ä–∞–∑:')
                bot.register_next_step_handler(message, add_more_subscribe_channels)
        except Exception:
            bot.reply_to(message, '–ë–æ—Ç –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –∫–∞–Ω–∞–ª–∞.\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–∑–Ω–∞—á—å—Ç–µ –µ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ–≥–æ –µ—â—ë —Ä–∞–∑:')
            bot.register_next_step_handler(message, add_more_subscribe_channels)
    else:
        bot.send_message(message.chat.id, '–ù–µ–ø—Ä–∞–≤–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç!\n–ù—É–∂–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç: @channelname\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ –≤ –Ω—É–∂–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ:')               
        bot.register_next_step_handler(message, add_more_subscribe_channels)


###–û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–∫–æ–ª—å–∫–æ –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π –Ω—É–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –±–æ—Ç—É
def how_much_winners(message):
    bot.send_message(message.chat.id, 'üßÆ –°–∫–æ–ª—å–∫–æ –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π –≤—ã–±—Ä–∞—Ç—å –±–æ—Ç—É?\n\n–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ:')
    bot.register_next_step_handler(message, how_much_winners2)
def how_much_winners2(message):
    folder_name = os.environ.get('CURRENT_FOLDER_NAME')
    with open(f'./{folder_name}/description.txt', 'a') as channels_file:
            channels_file.write(f'{message.text}:winner   ,')    
    bot.send_message(message.chat.id, '‚úÖ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ')
    publish_channel(message)        


###–í—ã–±–∏—Ä–∞–µ–º –∫–∞–Ω–∞–ª –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ —Ä–æ–∑—ã–≥—Ä—ã—à–∞
def publish_channel(message):
    keyboard4 = types.InlineKeyboardMarkup()
    knopka4 = types.InlineKeyboardButton(text=f"{os.environ['CHANNEL_USERNAME']}", callback_data='Channel_for_publish')
    keyboard4.add(knopka4)
    bot.send_message(message.chat.id, 'üóì –í –∫–∞–∫–æ–º –∫–∞–Ω–∞–ª–µ –ø—É–±–ª–∏–∫—É–µ–º —Ä–æ–∑—ã–≥—Ä—ã—à?', reply_markup=keyboard4)


###–í—ã–±–∏—Ä–∞–µ–º –≤—Ä–µ–º—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
def publish_time(message):
    keyboard5 = types.InlineKeyboardMarkup()
    knopka5 = types.InlineKeyboardButton(text="–ü—Ä—è–º–æ —Å–µ–π—á–∞—Å", callback_data='Time_right_now')
    knopka6 = types.InlineKeyboardButton(text="–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –≤—Ä–µ–º—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏", callback_data='Time_input')
    keyboard5.add(knopka5)
    keyboard5.add(knopka6)
    bot.send_message(message.chat.id, '‚è∞ –ö–æ–≥–¥–∞ –Ω—É–∂–Ω–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Ä–æ–∑—ã–≥—Ä—ã—à?', reply_markup=keyboard5)
def set_publish_time(message):
    bot.send_message(message.chat.id, '‚è∞ –ö–æ–≥–¥–∞ –Ω—É–∂–Ω–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Ä–æ–∑—ã–≥—Ä—ã—à? (–£–∫–∞–∂–∏—Ç–µ –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ –¥–¥.–º–º.–≥–≥ —á—á:–º–º)\n\n–ë–æ—Ç –∂–∏–≤–µ—Ç –ø–æ –≤—Ä–µ–º–µ–Ω–∏ (GMT+3) –ú–æ—Å–∫–≤–∞, –†–æ—Å—Å–∏—è')
    now = datetime.datetime.now()
    ten_minutes = now + datetime.timedelta(minutes=10)
    one_hour = now + datetime.timedelta(hours=1)
    one_day = now + datetime.timedelta(days=1)
    one_week = now + datetime.timedelta(weeks=1)
    date_format = "%Y-%m-%d"
    time_format = "%H:%M"
    ten_minutes_formatted = ten_minutes.strftime(f"{date_format} {time_format}")
    one_hour_formatted = one_hour.strftime(f"{date_format} {time_format}")
    one_day_formatted = one_day.strftime(f"{date_format} {time_format}")
    one_week_formatted = one_week.strftime(f"{date_format} {time_format}")
    bot.send_message(message.chat.id, f'–ü—Ä–∏–º–µ—Ä—ã:\n\n{ten_minutes_formatted} - —á–µ—Ä–µ–∑ 10 –º–∏–Ω—É—Ç\n{one_hour_formatted} - —á–µ—Ä–µ–∑ —á–∞—Å\n{one_day_formatted} - —á–µ—Ä–µ–∑ –¥–µ–Ω—å\n{one_week_formatted} - —á–µ—Ä–µ–∑ –Ω–µ–¥–µ–ª—é')
    bot.register_next_step_handler(message, set_publish_time2)
def set_publish_time2(message):
    folder_name = os.environ.get('CURRENT_FOLDER_NAME')
    variable_value = message.text
    current_time = datetime.datetime.now()
    try:
        variable_time = datetime.datetime.strptime(variable_value, "%Y-%m-%d %H:%M")
        if variable_time > current_time:
            with open(f'./{folder_name}/description.txt', 'a') as channels_file:
                channels_file.write(f'{message.text}   ,')    
            bot.send_message(message.chat.id, '‚úÖ –í—Ä–µ–º—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ')
            end_lot_time(message)
        else:
            bot.send_message(message.chat.id, "‚ùóÔ∏è –í—ã –≤–≤–µ–ª–∏ –≤—Ä–µ–º—è, –∫–æ—Ç–æ—Ä–æ–µ —É–∂–µ –ø—Ä–æ—à–ª–æ.\n\n–í–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –æ—Å–º–æ—Ç—Ä–∏—Ç–µ –ø—Ä–∏–º–µ—Ä –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑")
            set_publish_time(message)
    except Exception:
        bot.send_message(message.chat.id, "‚ùóÔ∏è –í—ã –≤–≤–µ–ª–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏.\n\n–í–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –æ—Å–º–æ—Ç—Ä–∏—Ç–µ –ø—Ä–∏–º–µ—Ä –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.")
        set_publish_time(message)


###–í—ã–±–∏—Ä–∞–µ–º —Å–ø–æ—Å–æ–± –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ä–æ–∑—ã–≥—Ä—ã—à–∞
def end_lot_time(message):
    keyboard5 = types.InlineKeyboardMarkup()
    knopka5 = types.InlineKeyboardButton(text="–ü–æ –≤—Ä–µ–º–µ–Ω–∏", callback_data='By_the_time')
    knopka6 = types.InlineKeyboardButton(text="–ü–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤", callback_data='By_pass_count')
    keyboard5.add(knopka5)
    keyboard5.add(knopka6)
    bot.send_message(message.chat.id, '‚è∞ –ö–∞–∫ –∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–æ–∑—ã–≥—Ä—ã—à?', reply_markup=keyboard5)
def end_lot_time_by_the_time(message):
    bot.send_message(message.chat.id, '‚è∞ –ö–æ–≥–¥–∞ –Ω—É–∂–Ω–æ –∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–æ–∑—ã–≥—Ä—ã—à? (–£–∫–∞–∂–∏—Ç–µ –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ –¥–¥.–º–º.–≥–≥ —á—á:–º–º)\n\n–ë–æ—Ç –∂–∏–≤–µ—Ç –ø–æ –≤—Ä–µ–º–µ–Ω–∏ (GMT+3) –ú–æ—Å–∫–≤–∞, –†–æ—Å—Å–∏—è')
    now = datetime.datetime.now()
    ten_minutes = now + datetime.timedelta(minutes=10)
    one_hour = now + datetime.timedelta(hours=1)
    one_day = now + datetime.timedelta(days=1)
    one_week = now + datetime.timedelta(weeks=1)
    date_format = "%Y-%m-%d"
    time_format = "%H:%M"
    ten_minutes_formatted = ten_minutes.strftime(f"{date_format} {time_format}")
    one_hour_formatted = one_hour.strftime(f"{date_format} {time_format}")
    one_day_formatted = one_day.strftime(f"{date_format} {time_format}")
    one_week_formatted = one_week.strftime(f"{date_format} {time_format}")
    bot.send_message(message.chat.id, f'–ü—Ä–∏–º–µ—Ä—ã:\n\n{ten_minutes_formatted} - —á–µ—Ä–µ–∑ 10 –º–∏–Ω—É—Ç\n{one_hour_formatted} - —á–µ—Ä–µ–∑ —á–∞—Å\n{one_day_formatted} - —á–µ—Ä–µ–∑ –¥–µ–Ω—å\n{one_week_formatted} - —á–µ—Ä–µ–∑ –Ω–µ–¥–µ–ª—é')
    bot.register_next_step_handler(message, end_lot_time_by_the_time2)
def end_lot_time_by_the_time2(message):
    folder_name = os.environ.get('CURRENT_FOLDER_NAME')
    variable_value = message.text
    current_time = datetime.datetime.now()
    with open(f'./{folder_name}/description.txt', 'r') as file:
        data = file.read()
    values = data.split('   ,')
    publication_date = values[4]
    if "RightNow" in publication_date:
        variable_time1 = datetime.datetime.now()
    else:
        variable_time1 = datetime.datetime.strptime(publication_date, "%Y-%m-%d %H:%M")
    try:
        variable_time2 = datetime.datetime.strptime(variable_value, "%Y-%m-%d %H:%M")
        if variable_time2 > current_time:
            if variable_time1 < variable_time2:
                with open(f'./{folder_name}/description.txt', 'a') as channels_file:
                    channels_file.write(f'{message.text}  time   ,')    
                bot.send_message(message.chat.id, '‚úÖ –í—Ä–µ–º—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ')
                check_final_post(message)
            else:
                bot.send_message(message.chat.id, "‚ùóÔ∏è –í—ã –≤–≤–µ–ª–∏ –≤—Ä–µ–º—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–æ–∑—ã–≥—Ä—ã—à–∞, –∫–æ—Ç–æ—Ä–æ–µ –ø—Ä–æ–≤–µ–¥–µ—Ç —Ä–æ–∑—ã–≥—Ä—ã—à —Ä–∞–Ω—å—à–µ, —á–µ–º –æ–Ω –æ–ø—É–±–ª–∏–∫—É–µ—Ç—Å—è.\n\n–í–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –æ—Å–º–æ—Ç—Ä–∏—Ç–µ –ø—Ä–∏–º–µ—Ä –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑")
                end_lot_time_by_the_time(message)    
        else:
            bot.send_message(message.chat.id, "‚ùóÔ∏è –í—ã –≤–≤–µ–ª–∏ –≤—Ä–µ–º—è, –∫–æ—Ç–æ—Ä–æ–µ —É–∂–µ –ø—Ä–æ—à–ª–æ.\n\n–í–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –æ—Å–º–æ—Ç—Ä–∏—Ç–µ –ø—Ä–∏–º–µ—Ä –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑")
            end_lot_time_by_the_time(message)
    except Exception:
        bot.send_message(message.chat.id, "‚ùóÔ∏è –í—ã –≤–≤–µ–ª–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏.\n\n–í–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –æ—Å–º–æ—Ç—Ä–∏—Ç–µ –ø—Ä–∏–º–µ—Ä –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.")
        end_lot_time_by_the_time(message)
def end_lot_time_by_pass_count(message):
    bot.send_message(message.chat.id, 'üßÆ –°–∫–æ–ª—å–∫–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–æ–∑—ã–≥—Ä—ã—à–∞?\n\n–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ:')
    bot.register_next_step_handler(message, end_lot_time_by_pass_count2)
def end_lot_time_by_pass_count2(message):
    folder_name = os.environ.get('CURRENT_FOLDER_NAME')
    with open(f'./{folder_name}/description.txt', 'a') as channels_file:
            channels_file.write(f'{message.text}  participants   ,')    
    bot.send_message(message.chat.id, '‚úÖ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ')
    check_final_post(message)        



###–ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å—Ç
def check_final_post(message):
    folder_name = os.environ.get('CURRENT_FOLDER_NAME')
    file_extension = os.environ.get('FILE_EXTENSION')
    image_path = f'./{folder_name}/file.{file_extension}'  # –£–∫–∞–∂–∏—Ç–µ –ø—É—Ç—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é
    with open(f'./{folder_name}/description.txt', 'r') as file:
        data = file.read()
    values = data.split('   ,')
    text = values[0] 
    button_text = values[1]
    winners_value = values[2]
    winners_value1 = winners_value.split(':')
    winners_value2 = winners_value1[0]
    publication_channel = values[3]
    publication_date = values[4]
    if 'RightNow' in publication_date:
        publication_date = str('–°—Ä–∞–∑—É –ø–æ—Å–ª–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏')
    way_of_ending = values[5]
    if 'participants' in way_of_ending:
        way_of_ending1 = way_of_ending.split("  ")
        way_of_ending2 = str(f'–ø–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ {way_of_ending1[0]} —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤')
    else:
        way_of_ending1 = way_of_ending.split("  ")
        way_of_ending2 = str(f'–≤ —É–∫–∞–∑–∞–Ω–Ω–æ–µ ({way_of_ending1[0]}) –≤—Ä–µ–º—è')
    with open(f'./{folder_name}/channels.txt', 'r') as channels:
        channels_for_subscribe = channels.read()
        if 'Without_Subscribe' in channels_for_subscribe:
            channels_for_subscribe2 = str('–ë–µ–∑ –∫–∞–Ω–∞–ª–æ–≤, –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –∫ –ø–æ–¥–ø–∏—Å–∫–µ')
        else:
            channels_for_subscribe1 = channels_for_subscribe.split(',')
            channels_for_subscribe1.pop()
            channels_for_subscribe2 = '\n'.join(channels_for_subscribe1)
    photo = open(image_path, 'rb')
    keyboard4 = types.InlineKeyboardMarkup()
    knopka4 = types.InlineKeyboardButton(text=f"{button_text}", callback_data='I`m_in')
    keyboard4.add(knopka4)
    bot.send_photo(message.chat.id, photo, caption=text, reply_markup=keyboard4)
    keyboard5 = types.InlineKeyboardMarkup()
    knopka5 = types.InlineKeyboardButton(text="–°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ä–æ–∑—ã–≥—Ä—ã—à", callback_data='Save_lot')
    knopka6 = types.InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∞", callback_data='Cansel_sure')
    keyboard5.add(knopka5)
    keyboard5.add(knopka6)
    bot.send_message(message.chat.id, f'üßÆ –í–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–æ–∑—ã–≥—Ä—ã—à\n\nüîö –†–æ–∑—ã–≥—Ä—ã—à –æ–ø—É–±–ª–∏–∫—É–µ—Ç—Å—è:\n{publication_date}\nüîö –í –∫–∞–Ω–∞–ª–µ:\n{publication_channel}\n\nüîö –†–æ–∑—ã–≥—Ä—ã—à –æ–∫–æ–Ω—á–∏—Ç—Å—è {way_of_ending2}\n\nüèÜ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π: {winners_value2}\n\nüòé –ö–∞–Ω–∞–ª—ã, –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –∫ –ø–æ–¥–ø–∏—Å–∫–µ: {channels_for_subscribe2}', reply_markup=keyboard5)
    photo.close()


#–£—Ç–æ—á–Ω–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è —Ä–æ–∑—ã–≥—Ä—ã—à–∞
def Cancel_lot_sure(message):
    keyboard = types.InlineKeyboardMarkup()
    knopka = types.InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Ä–æ–∑—ã–≥—Ä—ã—à—É", callback_data='Back_to_lot')
    knopka2 = types.InlineKeyboardButton(text="–£–¥–∞–ª–∏—Ç—å —Ä–æ–∑—ã–≥—Ä—ã—à", callback_data='Cansel')
    keyboard.add(knopka)
    keyboard.add(knopka2)
    bot.send_message(message.chat.id, '–í—ã —É–≤–µ—Ä–µ–Ω—ã —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —Å–æ–∑–¥–∞–Ω–Ω—ã–π —Ä–æ–∑—ã–≥—Ä—ã—à?', reply_markup=keyboard)


#–£–¥–∞–ª–µ–Ω–∏–µ —Ä–æ–∑—ã–≥—Ä—ã—à–∞
def Cancel_lot(message):        
    bot.send_message(message.chat.id, '–†–æ–∑—ã–≥—Ä—ã—à —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω!\n\n–í—ã –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π, –∏—Å–ø–æ–ª—å–∑—É—è –∫–Ω–æ–ø–∫–∏ –ø–æ–¥ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π.', reply_markup=markup)

#–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–æ–∑—ã–≥—Ä—ã—à–∞
def Save_lottery(message):
    bot.send_message(message.chat.id, '‚úÖ –†–æ–∑—ã–≥—Ä—ã—à —Å–æ—Ö—Ä–∞–Ω–µ–Ω –∏ –≥–æ—Ç–æ–≤–∏—Ç—Å—è –∫ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏.\n\n–î–ª—è –≤—ã–∑–æ–≤–∞ –º–µ–Ω—é –Ω–∞–ø–∏—à–∏—Ç–µ /start')






###–û—Ç–∫–ª–∏–∫–∏ –∫–Ω–æ–ø–æ–∫ –ø–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
@bot.callback_query_handler(func=lambda callback: True)
def callback_message(callback):
    folder_name = os.environ.get('CURRENT_FOLDER_NAME')
    if callback.data == 'btn_ver1':
        with open(f'./{folder_name}/description.txt', 'a') as description_file:
            description_file.write("–£—á–∞—Å—Ç–≤—É—é!   ,")
        bot.send_message(callback.message.chat.id, '‚úÖ –¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω')
        chose_channels_subscribe(callback.message)
    elif callback.data == 'btn_ver2':
        with open(f'./{folder_name}/description.txt', 'a') as description_file:
            description_file.write("–£—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å   ,")
        bot.send_message(callback.message.chat.id, '‚úÖ –¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω')
        chose_channels_subscribe(callback.message)    
    elif callback.data == 'btn_ver3':
        with open(f'./{folder_name}/description.txt', 'a') as description_file:
            description_file.write("–ü—Ä–∏–Ω—è—Ç—å —É—á–∞—Å—Ç–∏–µ   ,")
        bot.send_message(callback.message.chat.id, '‚úÖ –¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω')
        chose_channels_subscribe(callback.message)
    elif callback.data == 'btn_ver4':
        bot.send_message(callback.message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –∫–Ω–æ–ø–∫–∏:')
        bot.register_next_step_handler(callback.message, add_button_text)
    elif callback.data == 'Add_channels':
        with open(f'./{folder_name}/channels.txt', 'w') as channels_file:
            channels_file.write(os.environ['CHANNEL_USERNAME']+',')    
        bot.send_message(callback.message.chat.id, '\n\n–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –∫–∞–Ω–∞–ª, –Ω—É–∂–Ω–æ:\n1. –î–æ–±–∞–≤–∏—Ç—å –±–æ—Ç–∞ (@{bot_info.username}) –≤ –≤–∞—à –∫–∞–Ω–∞–ª –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (—ç—Ç–æ –Ω—É–∂–Ω–æ, —á—Ç–æ–±—ã –±–æ—Ç –º–æ–≥ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞ –∫–∞–Ω–∞–ª)\n2. –û—Ç–ø—Ä–∞–≤–∏—Ç—å –±–æ—Ç—É –∫–∞–Ω–∞–ª –≤ —Ñ–æ—Ä–º–∞—Ç–µ @channelname.')
        bot.register_next_step_handler(callback.message, add_more_subscribe_channels)
    elif callback.data == 'Add_more_subscribe_channels':
        bot.send_message(callback.message.chat.id, '\n\n–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –∫–∞–Ω–∞–ª, –Ω—É–∂–Ω–æ:\n1. –î–æ–±–∞–≤–∏—Ç—å –±–æ—Ç–∞ (@{bot_info.username}) –≤ –≤–∞—à –∫–∞–Ω–∞–ª –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (—ç—Ç–æ –Ω—É–∂–Ω–æ, —á—Ç–æ–±—ã –±–æ—Ç –º–æ–≥ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞ –∫–∞–Ω–∞–ª)\n2. –û—Ç–ø—Ä–∞–≤–∏—Ç—å –±–æ—Ç—É –∫–∞–Ω–∞–ª –≤ —Ñ–æ—Ä–º–∞—Ç–µ @channelname.')
        bot.register_next_step_handler(callback.message, add_more_subscribe_channels)
    elif callback.data == 'Only_My_Channel':
        with open(f'./{folder_name}/channels.txt', 'w') as channels_file:
            channels_file.write(os.environ['CHANNEL_USERNAME'])    
        bot.send_message(callback.message.chat.id, '‚úÖ –í–∞—à –≤—ã–±–æ—Ä —Å–æ—Ö—Ä–∞–Ω–µ–Ω')
        how_much_winners(callback.message)
    elif callback.data == 'Without_Subscribe':
        with open(f'./{folder_name}/channels.txt', 'w') as channels_file:
            channels_file.write('Without_Subscribe')    
        bot.send_message(callback.message.chat.id, '‚úÖ –í–∞—à –≤—ã–±–æ—Ä —Å–æ—Ö—Ä–∞–Ω–µ–Ω')
        how_much_winners(callback.message)        
    elif callback.data == 'Next_step':    
        bot.send_message(callback.message.chat.id, '‚úÖ –í–∞—à –≤—ã–±–æ—Ä —Å–æ—Ö—Ä–∞–Ω–µ–Ω')
        how_much_winners(callback.message)                
    elif callback.data == 'Channel_for_publish':
        with open(f'./{folder_name}/description.txt', 'a') as channels_file:
            channels_file.write(f'{os.environ["CHANNEL_USERNAME"]}   ,')    
        bot.send_message(callback.message.chat.id, '‚úÖ –í–∞—à –≤—ã–±–æ—Ä —Å–æ—Ö—Ä–∞–Ω–µ–Ω')
        publish_time(callback.message)        
    elif callback.data == 'Time_right_now':
        with open(f'./{folder_name}/description.txt', 'a') as channels_file:
            channels_file.write('RightNow   ,')    
        bot.send_message(callback.message.chat.id, '‚úÖ –í—Ä–µ–º—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ')
        end_lot_time(callback.message)        
    elif callback.data == 'Time_input':
        set_publish_time(callback.message)        
    elif callback.data == 'Change_channel':    
        bot.send_message(callback.message.chat.id, '–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥—Ä—É–≥–æ–π –∫–∞–Ω–∞–ª –¥–ª—è —Ä–æ–∑—ã–≥—Ä—ã—à–∞ - —Å–¥–µ–ª–∞–π—Ç–µ —ç—Ç–æ–≥–æ –±–æ—Ç–∞ –∞–¥–º–∏–Ω–æ–º –∫–∞–Ω–∞–ª–∞ –∏ –Ω–∞–ø–∏—à–∏—Ç–µ –∏–º—è –Ω–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n\n@channelname')
        bot.register_next_step_handler(callback.message, process_new_channel)        
    elif callback.data == 'By_the_time':
        end_lot_time_by_the_time(callback.message)        
    elif callback.data == 'By_pass_count':    
        end_lot_time_by_pass_count(callback.message)        
    elif callback.data == 'Cansel_sure':    
        Cancel_lot_sure(callback.message)        
    elif callback.data == 'Cansel':    
        Cancel_lot(callback.message)        
    elif callback.data == 'Save_lot':    
        Save_lottery(callback.message)
    elif callback.data == 'Back_to_lot':    
        check_final_post(callback.message)    


###–û—Ç–∫–ª–∏–∫ –Ω–∞ –∫–Ω–æ–ø–∫–∏ –ø–æ–¥ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
@bot.message_handler(func=lambda message: True)
def handle_message(message):
    if message.text == "–°–æ–∑–¥–∞—Ç—å —Ä–æ–∑—ã–≥—Ä—ã—à":
        # –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–∞–º–æ–≥–æ –±–æ–ª—å—à–æ–≥–æ —á–∏—Å–ª–∞ –ø–æ—Å–ª–µ "MyLot"
        max_number = 0
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–∞–ø–æ–∫ –∏ –Ω–∞—Ö–æ–¥–∏–º —Å–∞–º–æ–µ –±–æ–ª—å—à–æ–µ —á–∏—Å–ª–æ
        for item in os.listdir(current_directory):
            if os.path.isdir(os.path.join(current_directory, item)) and item.startswith("MyLot"):
                try:
                    number = int(item.replace("MyLot", ""))
                    if number > max_number:
                        max_number = number
                except ValueError:
                    pass
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –ø–∞–ø–∫—É "MyLot" —Å —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–º –Ω–æ–º–µ—Ä–æ–º
        new_folder_name = f"MyLot{max_number + 1}"
        os.makedirs(os.path.join(current_directory, new_folder_name), exist_ok=True)
        os.environ['CURRENT_FOLDER_NAME'] = new_folder_name
        bot.send_message(message.chat.id, f'–°–æ–∑–¥–∞–Ω–∏–µ —Ä–æ–∑—ã–≥—Ä—ã—à–∞\n‚úâÔ∏è –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è —Ä–æ–∑—ã–≥—Ä—ã—à–∞. –í—ã –º–æ–∂–µ—Ç–µ —Ç–∞–∫–∂–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–º–µ—Å—Ç–µ —Å —Ç–µ–∫—Å—Ç–æ–º –∫–∞—Ä—Ç–∏–Ω–∫—É, –≤–∏–¥–µ–æ –∏–ª–∏ GIF, –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ä–∞–∑–º–µ—Ç–∫–æ–π.\n\n‚ùóÔ∏è –í—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ 1 –º–µ–¥–∏–∞—Ñ–∞–π–ª')
        bot.register_next_step_handler(message, files_for_lot)
    elif message.text == "–ú–æ–∏ —Ä–æ–∑—ã–≥—Ä—ã—à–∏":
        bot.send_message(message.chat.id, f'–ú–æ–∏ —Ä–æ—ã–≥—Ä—ã—à–∏')
    elif message.text == "–ú–æ–π –∫–∞–Ω–∞–ª":    
        edit_channel(message)
    elif message.text == "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞":
        bot.send_message(message.chat.id, f'–ü–æ–¥–¥–µ—Ä–∂–∫–∞')







"""
@bot.message_handler(commands=['join'])
def lottery(message):
    user = message.from_user
    text_file = open("member.txt", 'r')
    spisok = text_file.read()
    text_file.close()
    if check_subscription(user):
        if user.username in spisok:
            bot.send_message(message.chat.id, f"–í—ã —É–∂–µ —É—á–∞—Å—Ç–≤—É–µ—Ç–µ –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ ü•≥\n–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –±—É–¥—É—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω—ã –≤ –≥—Ä—É–ø–ø–µ @CSKA_mil\n–ï—Å–ª–∏ —ç—Ç–æ –Ω–µ –ø–µ—Ä–≤—ã–π —Ä–æ–∑—ã–≥—Ä—ã—à –æ—Ç –Ω–∞—à–µ–≥–æ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞ –≤ –∫–æ—Ç–æ—Ä–æ–º –≤—ã —É—á–∞—Å—Ç–≤—É–µ—Ç–µ –∏–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —É—Å–ø–µ—à–Ω–∞ –ª–∏ –ø—Ä–æ—à–ª–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è - –Ω–∞–ø–∏—à–∏—Ç–µ /join –µ—â—ë —Ä–∞–∑)")    
        else: 
            uchastnik = str(user.username)
            text_file = open("member.txt", 'a')
            if not uchastnik in spisok:
                text_file.write(uchastnik + ",")
            text_file.close()
            bot.send_message(message.chat.id, f"–í—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Ä–æ–∑—ã–≥—Ä—ã—à–∞ ü•≥\n–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –±—É–¥—É—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω—ã –≤ –≥—Ä—É–ø–ø–µ @CSKA_mil\n–ï—Å–ª–∏ —ç—Ç–æ –Ω–µ –ø–µ—Ä–≤—ã–π —Ä–æ–∑—ã–≥—Ä—ã—à –æ—Ç –Ω–∞—à–µ–≥–æ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞ –≤ –∫–æ—Ç–æ—Ä–æ–º –≤—ã —É—á–∞—Å—Ç–≤—É–µ—Ç–µ –∏–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —É—Å–ø–µ—à–Ω–∞ –ª–∏ –ø—Ä–æ—à–ª–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è - –Ω–∞–ø–∏—à–∏—Ç–µ /join –µ—â—ë —Ä–∞–∑)")
    else:
        bot.send_message(message.chat.id, f"–í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –∫–∞–Ω–∞–ª {CHANNEL_USERNAME} üòî.\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å, —á—Ç–æ–±—ã —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ –∏ –Ω–∞–ø–∏—à–∏—Ç–µ /join –µ—â–µ —Ä–∞–∑.")

def check_subscription(user):
    user_id = user.id
    result = bot.get_chat_member(CHANNEL_USERNAME, user_id)
    if result.status == "left" or result.status == "kicked":
        return False
    return True
"""

# –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
bot.polling()
